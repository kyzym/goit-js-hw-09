{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAGMC,EAAOC,SAASC,cAAc,SAC9BC,EAAaF,SAASC,cAAc,kBACpCE,EAAOH,SAASC,cAAc,iBAC9BG,EAASJ,SAASC,cAAc,mBAEtCF,EAAKM,iBAAiB,UAEtB,SAAwBC,G,kBAgBxB,IAAuBC,EAAUC,GAAVD,EAXLE,EAWeD,EAXZE,EAYZ,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEL,WAAUC,UAEpBK,EAAO,CAAEN,WAAUC,YAEpBA,OAnBAS,MAAK,SAAAT,GACJX,EAAAqB,OAAOC,QAAQ,uBAAiCC,OAARX,EAAE,QAAYW,OAANZ,EAAM,UAEvDa,OAAM,SAAAb,GACLX,EAAAqB,OAAOI,QAAQ,sBAA8BF,OAARX,EAAE,QAAYW,OAANZ,EAAM,UAEvDE,GAAcP,EAAKoB,eAXrBjB,EAAEkB,iBAGF,IAFA,IAAId,EAAaR,EAAWqB,cAEnBE,EAAI,EAAGA,GAAKrB,EAAOmB,cAAeE,GAAK,EAACC,EAAAD,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport 'notiflix/dist/notiflix-3.2.5.min.css';\n\nconst form = document.querySelector('.form');\nconst firstDelay = document.querySelector('[name=\"delay\"]');\nconst step = document.querySelector('[name=\"step\"]');\nconst amount = document.querySelector('[name=\"amount\"]');\n\nform.addEventListener('submit', submitPromises);\n\nfunction submitPromises(e) {\n  e.preventDefault();\n  let delayValue = firstDelay.valueAsNumber;\n\n  for (let i = 1; i <= amount.valueAsNumber; i += 1) {\n    createPromise(i, delayValue)\n      .then(delay => {\n        Notify.success(`✅ Fulfilled promise ${i} in ${delay}ms`);\n      })\n      .catch(delay => {\n        Notify.failure(`❌ Rejected promise ${i} in ${delay}ms`);\n      });\n    delayValue += step.valueAsNumber;\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$firstDelay","$ce04d3a99e08e73b$var$step","$ce04d3a99e08e73b$var$amount","addEventListener","e","position","delay","i","delayValue","Promise","resolve","reject","setTimeout","Math","random","then","Notify","success","concat","catch","failure","valueAsNumber","preventDefault","i1","_loop"],"version":3,"file":"03-promises.d8a78730.js.map"}