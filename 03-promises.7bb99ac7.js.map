{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAGA,MAAMC,EAAOC,SAASC,cAAc,SAE9BC,EAAaF,SAASC,cAAc,kBACpCE,EAAOH,SAASC,cAAc,iBAC9BG,EAASJ,SAASC,cAAc,mBAqBtC,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,MAEpBA,MA5BPR,EAAKe,iBAAiB,UAEtB,SAAwBC,GACtBA,EAAEC,iBAEF,IAAIC,EAAQf,EAAWgB,cAEvB,IAAK,IAAIC,EAAI,EAAGA,GAAKf,EAAOc,cAAeC,GAAK,EAC9Cd,EAAcc,EAAGF,GACdG,MAAK,EAACd,SAAEA,EAAQC,MAAEA,MACjBV,EAAAwB,OAAOC,QAAQ,uBAAqBH,QAAUZ,UAE/CgB,OAAM,EAACjB,SAAEA,EAAQC,MAAEA,MAClBV,EAAAwB,OAAOG,QAAQ,sBAAoBL,QAAQZ,UAE/CU,GAASd,EAAKe","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport 'notiflix/dist/notiflix-3.2.5.min.css';\n\nconst form = document.querySelector('.form');\n\nconst firstDelay = document.querySelector('[name=\"delay\"]');\nconst step = document.querySelector('[name=\"step\"]');\nconst amount = document.querySelector('[name=\"amount\"]');\n\nform.addEventListener('submit', submitPromises);\n\nfunction submitPromises(e) {\n  e.preventDefault();\n\n  let delay = firstDelay.valueAsNumber;\n\n  for (let i = 1; i <= amount.valueAsNumber; i += 1) {\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${i} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${i} in ${delay}ms`);\n      });\n    delay += step.valueAsNumber;\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$firstDelay","$47d4ff9957288465$var$step","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","e","preventDefault","delay1","valueAsNumber","i","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.7bb99ac7.js.map"}